---
title: "clean_metadata"
author: "Payel Sardar"
format: pdf
editor: visual
---

### Importing necessary libraries

```{r}
library(stringr)
library(tidyr)
library(dplyr)
```

### Setting the working directory

```{r}
setwd("/users/k24034333/DCDM_Group6/")
```

### Setting the path to the metadata directory

```{r}
metadata_dir = "/users/k24034333/DCDM_Group6/metadata/"
```

# Reading and cleaning the files

1.  IMPC_procedure.txt

    Reading the lines of the file

    ```{r}
    proc_lines <- readLines(paste(metadata_dir,"IMPC_procedure.txt",sep=""))
    ```

    ```{r}
    data <- lapply(proc_lines[-1], function(line) {
      
      # Match the first field (line_number + procedureId) and the rest
      matches <- str_match(
        line,
        '^"([^"]+)"\\s+"([^,]+),\\s*(.*),\\s*(TRUE|FALSE),\\s*(\\d+)"$'
        )
      
      # Return the extracted fields
      c(matches[2], matches[3], matches[4], matches[5], matches[6])
    })
    ```

    Combining into a data frame

    ```{r}
    procedure_df <- do.call(rbind, data)
    colnames(procedure_df) <- c("line_number_procedureId",
                                "name",
                                "description",
                                "isMandatory",
                                "impcParameterOrigId")
    procedure_df <- as.data.frame(procedure_df)
    head(procedure_df)
    ```

    Checking for any duplicate rows

    ```{r}
    # Before cleaning
    print("Orginal dimension:")
    dim(procedure_df)
    # Getting unique value counts for each column/feature
    unique_counts <- sapply(procedure_df, function(x) length(unique(x)))
    print(unique_counts)
    ```

    Saving the cleaned data in a CSV file

    ```{r}
    write.csv(procedure_df,
              paste(metadata_dir,"IMPC_procedure.csv",
                    sep=""),
              row.names = FALSE)
    ```

2.  IMPC_parameter_description.txt

    Reading the lines of the file

    ```{r}
    param_lines <- readLines(paste(metadata_dir,
                                   "IMPC_parameter_description.txt",
                                   sep=""))
    ```

    Using regex for separating data into columns

    ```{r}
    data <- lapply(param_lines[-1], function(line) {
      
      # Matching the first field and the rest
      matches <- str_match(
        line,
        '^"([^"]+)"\\s+"([^,]+),\\s*([^,]+),\\s*([^,]+),\\s*([^"]+)"$'
        )
      
      # Returning the extracted fields
      c(matches[2], matches[3], matches[4], matches[5], matches[6])
    })
    ```

    Combining into a data frame

    ```{r}
    param_df <- do.call(rbind, data)

    # Using the first row as col names
    colnames(param_df) <- param_df[1, ]

    # Dropping the first row
    param_df <- param_df[-1, ]
    param_df <- as.data.frame(param_df)
    param_df$line_number <- NULL

    # Viewing the resulting dataframe
    head(param_df)
    ```

    Checking for any duplicate values/rows

    ```{r}
    # Before cleaning
    print("Orginal dimension:")
    dim(param_df)
    # Getting unique value counts for each column/feature
    unique_counts <- sapply(param_df, function(x) length(unique(x)))
    print(unique_counts)
    ```

    This tells us that we have duplicate values.

    ```{r}
    # Finding impcParameterOrigId with multiple records
    multiple_records <- table(param_df$impcParameterOrigId)
    multiple_records[multiple_records > 1]
    ```

    ```{r}
    param_df_cleaned <- distinct(param_df)
    print("Dimension after removing duplicate values:")
    dim(param_df_cleaned)
    unique_counts <- sapply(param_df_cleaned, function(x) length(unique(x)))
    print(unique_counts)
    ```

    Saving the resulting data frame in a CSV file

    ```{r}
    write.csv(param_df_cleaned,
              paste(metadata_dir,"IMPC_parameter_description.csv",
                    sep=""),
              row.names = FALSE)
    ```

3.  Disease_info

    ```{r}
    disease_lines <- readLines(paste(metadata_dir,
                                   "Disease_information.txt",
                                   sep=""))
    ```

    ```{r}
    data <- lapply(disease_lines[-2], function(line) {
      
      # Matching the first field and the rest
      matches <- str_match(
        line,
      #  '^"\\d+"\\s+"([^,]+),\\s*([^,]+(?:, [^,]+)*),\\s*([^,]+),\\s*([\\d.]+)"$'
        '^"([^"]+)"\\s+"([^,]+),\\s*([^,]+(?:,\\s*[^,]+)*),\\s*([^,]+),\\s*(\\d+(?:\\.\\d+)?)"$'
        )
      
      # Returning the extracted fields
      c(matches[3], matches[4], matches[5], matches[6])
    })
    ```

    ```{r}
    disease_info_df <- do.call(rbind, data)

    # Using the first row as col names
    colnames(disease_info_df) <- c("disease_id", 
                            "disease_term", 
                            "gene_accession_id", 
                            "phenodigm_score")

    # Dropping the first row
    disease_info_df <- disease_info_df[-1, ]
    disease_info_df <- as.data.frame(disease_info_df)
    disease_info_df$phenodigm_score <- as.numeric()

    # Viewing the resulting dataframe
    head(disease_info_df)
    ```

    Removing any duplicate values

    ```{r}
    #Using dplyr package to remove any duplicate rows
    disease_info_df_cleaned <- distinct(disease_info_df)
    ```

    ```{r}
    write.csv(disease_info_df_cleaned, 
              "/users/k24034333/DCDM_Group6/metadata/Disease_information.csv",
              row.names = FALSE)

    ```
